# Copyright (c) 2019 CloudZero, Inc. All rights reserved.
# Licensed under the MIT License. See LICENSE file in the project root for full license information.

Metadata:
  SAMWise:
    Version: '1.0'
    DeployBucket: 'sample-deploy-bucket'
    StackName: 'MyStackName'
    Variables:
      - PreparedVar: "PreparedValue"

AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Sample Test Template

Parameters:
  Namespace:
    Type: String
    Description: Unique (within a given AWS account) System Name
    Default: '#{Namespace}'

Globals:
  Function:
    Runtime: python3.7
    CodeUri: ./src
    Environment:
      Variables:
        LOG_LEVEL: INFO
        NAMESPACE: '#{Namespace}'
        FEATURE: '#{StackName}'
        CONFIG: !Sub 's3://${ConfigBucket}/configuration.json'


Resources:
  #StateMachine
  MyStateMachine:
    Type: AWS::StepFunctions::StateMachine
    Properties:
      StateMachineName: !Sub "#{Namespace}-#{StackName}-stm"
      RoleArn: !GetAtt MyStateMachineRole.Arn
      DefinitionString: #{include ./tests/data/MyStateMachine.json}

  MyStateMachineRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "#{Namespace}-#{StackName}-stm-role"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Action: sts:AssumeRole
            Principal:
              Service: !Sub states.${AWS::Region}.amazonaws.com
      Policies:
        - PolicyName: !Sub "#{Namespace}-#{StackName}-stm-role-policy"
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunction
                Resource:
                  - !GetAtt MyFunction.Arn
              - Effect: Allow
                Action: sns:publish
                Resource:
                  - !Ref SampleEvents

  # Functions
  MyFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: '#{Namespace}-#{StackName}-MyFunction'
      Handler: functions/my/handler.main
      MemorySize: 128
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref ConfigBucket

  LoadConfig:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: '#{Namespace}-#{StackName}-LoadConfig'
      Handler: functions/config/handler.main
      MemorySize: 128
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref ConfigBucket

  # Buckets
  ConfigBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub '#{Namespace}-#{StackName}-${AWS::AccountId}'

  # Topics
  SampleEvents:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: '#{Namespace}-#{StackName}-events'
